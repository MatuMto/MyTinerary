{"version":3,"sources":["components/Slide.js","components/Carrousel.js","redux/action/authActions.js","components/Header.js","components/Hero.js","components/CallToAction.js","components/HomeMain.js","components/ResponsiveSlide.js","components/ResponsiveCarrousel.js","components/CarrouselData.js","components/LoadingAnimation.js","components/CitiesFooter.js","pages/Home.js","components/CityCard.js","components/CitiesHeader.js","redux/action/citiesActions.js","pages/Cities.js","components/ItineraryTittle.js","redux/action/itinerariesActions.js","redux/action/activitiesActions.js","components/ItineraryCard.js","pages/Itineraries.js","components/SignUp.js","components/SignIn.js","App.js","redux/reducers/citiesReducer.js","redux/reducers/itineraryReducer.js","redux/reducers/authReducer.js","redux/reducers/mainReducer.js","index.js"],"names":["Slide","singleSlide","className","style","background","img","backgroundRepeat","backgroundPosition","backgroundSize","location","Carrousel","carrouselData","enableAutoPlay","autoPlaySpeed","map","array","index","authActions","registerUser","userToSave","dispatch","getState","a","axios","post","response","data","success","error","Swal","fire","icon","title","text","errors","type","payload","logUser","incomingUser","logOutUser","forcedLoginByLS","usuarioLS","get","headers","token","console","log","mapDispatchToProps","connect","state","userLogged","auth","props","userImage","image","useState","dropdown","setDropdown","to","src","alt","width","color","onClick","name","marginLeft","height","borderRadius","backgroundImage","Dropdown","isOpen","toggle","DropdownToggle","DropdownMenu","DropdownItem","disabled","Hero","CallToAction","HomeMain","ResponsiveSlide","ResponsiveCarrousel","this","itemsToShow","object","Component","CarrouselData","id","LoadingAnimation","bars","white","margin","CitiesFooter","Home","infoOfCities","loading","then","setState","respuesta","React","CityCard","textDecoration","_id","cityName","marginBottom","citiesActions","uploadCities","fetch","json","catch","citiesFilter","elementoACapturar","trim","callSingleCity","Cities","display","flexDirection","onChange","e","target","value","placeholder","citiesList","length","flexWrap","minHeight","justifyContent","ciudadesFiltradas","city","alignItems","cities","allCities","ItineraryTittle","selectedCity","country","itinerariesActions","callSingleCityItinearies","likeItinerary","IDs","sendComment","commentInfo","deleteComment","delete","editComment","itineraryId","put","activitiesActions","getItineraryActivities","toast","configure","itineraries","itineraryData","likes","totalLikes","setTotalLikes","liked","setLiked","itineraryActivities","setItineraryActivities","setIsOpen","allComments","setAllComments","commentContent","setCommentContent","isEditingComment","setIsEditingComment","editedComment","setEditedComment","useEffect","itineraryLiked","indexOf","userId","viewMoreFunction","comments","comment","deleteSingleComment_","deleteSingleComment","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","isConfirmed","sendEditedComment","notify","tittle","authorImg","authorName","fontSize","Array","price","fill","element","duration","hashtags","Collapse","Card","activity","userImg","userName","commentId","newComment","faPaperPlane","Itineraries","receivedId","match","params","find","selectedCityItineraries","itinerary","textAlign","padding","info","setInfo","lastName","mail","password","newUser","setNewUser","setErrors","res","saveInfo","sendData","googleUser","preventDefault","user","details","responseGoogle","profileObj","givenName","familyName","email","googleId","imageUrl","message","action","clientId","buttonText","onSuccess","onFailure","cookiePolicy","setIncomingUser","userGoogle","alert","localStorage","getItem","datosUsuario","JSON","parse","exact","path","component","SignUp","SignIn","initialState","citiesReducer","inputValue","filter","toLowerCase","slice","itinerariesReducer","authReducer","setItem","stringify","clear","mainReducer","combineReducers","myTineraryStore","createStore","applyMiddleware","thunk","ReactDOM","render","store","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.00260580.chunk.js","sourcesContent":["const Slide = ({singleSlide})=>{\r\n   return(\r\n      <>\r\n         <div className=\"slide-container\">\r\n            <div className=\"card1\" style={{\r\n               background: `url(/img/${singleSlide[0].img})`,\r\n               backgroundRepeat: 'no-repeat',\r\n               backgroundPosition: 'center',\r\n               backgroundSize: 'cover'\r\n            }}>\r\n               <div className=\"location-name-container\">\r\n                  <p>{singleSlide[0].location}</p>\r\n               </div>\r\n            </div>\r\n\r\n            <div className=\"card2\" style={{\r\n               background: `url(/img/${singleSlide[1].img})`,\r\n               backgroundRepeat: 'no-repeat',\r\n               backgroundPosition: 'center',\r\n               backgroundSize: 'cover'\r\n            }}>\r\n               <div className=\"location-name-container\">\r\n                  <p>{singleSlide[1].location}</p>\r\n               </div>\r\n            </div>\r\n\r\n            <div className=\"card3\" style={{\r\n               background: `url(/img/${singleSlide[2].img}) `,\r\n               backgroundRepeat: 'no-repeat',\r\n               backgroundPosition: 'center',\r\n               backgroundSize: 'cover'\r\n            }}>\r\n               <div className=\"location-name-container\">\r\n                  <p>{singleSlide[2].location}</p>\r\n               </div>\r\n            </div>\r\n\r\n            <div className=\"card4\" style={{\r\n               background: `url(/img/${singleSlide[3].img})`,\r\n               backgroundRepeat: 'no-repeat',\r\n               backgroundPosition: 'center',\r\n               backgroundSize: 'cover'\r\n            }}>\r\n               <div className=\"location-name-container\">\r\n                  <p>{singleSlide[3].location}</p>\r\n               </div>\r\n            </div>\r\n         </div>      \r\n      </>\r\n   )   \r\n}\r\n\r\nexport default Slide","import Slide from './Slide'\r\nimport Carousel from 'react-elastic-carousel';\r\n\r\nconst Carrousel = ({carrouselData})=>{\r\n   return (\r\n      <>\r\n         <div className=\"slide-tittle-container\">\r\n            <h3 className=\"slide-tittle\">Popular MyTineraries</h3>\r\n         </div>\r\n\r\n         <div className=\"complete-carrousel\">\r\n            <section className=\"slider\">\r\n               <Carousel enableAutoPlay autoPlaySpeed={5000}>\r\n                  {carrouselData.map((array, index) => <Slide singleSlide={array}  />)}\r\n               </Carousel>\r\n            </section>\r\n         </div>\r\n      </>\r\n   )\r\n}\r\nexport default Carrousel","import axios from 'axios'\r\nimport Swal from 'sweetalert2'\r\nconst authActions = {\r\n\r\n   registerUser: (userToSave)=>{\r\n      return async(dispatch, getState) => {\r\n         const response = await axios.post('https://mytinerary-lorenzo.herokuapp.com/api/user/signUp', userToSave)\r\n         if(!response.data.success){\r\n            response.data.error && Swal.fire({\r\n               icon: 'error',\r\n               title: 'Oops...',\r\n               text: response.data.error,\r\n             })\r\n            return response.data.errors //asi retorno directamente al componente que está llamando a esta action \r\n            // return false // esto haria que se corte acá y la accion no continue hacia el reducer\r\n         }\r\n         dispatch({type: 'LOG_USER', payload: response.data.success ? response.data.response : null})\r\n         // le pongo LOG_USER porque el trabajo del front es el mismo tanto en register como en log. Mandar Info y luego recibir La Info o el error.\r\n      }\r\n   } ,\r\n   \r\n   logUser: (incomingUser)=>{\r\n      return async(dispatch, getState)=>{\r\n         const response = await axios.post('https://mytinerary-lorenzo.herokuapp.com/api/user/signIn', incomingUser)\r\n         if(!response.data.success){\r\n            Swal.fire({\r\n               icon: 'error',\r\n               title: 'Oops...',\r\n               text: response.data.error,\r\n             })\r\n         }\r\n         dispatch({type: 'LOG_USER', payload: response.data.success ? response.data.response : null})\r\n         // le pongo LOG_USER porque el trabajo del front es el mismo tanto en register como en log. Mandar Info y luego recibir La Info o el error.\r\n      }\r\n   },\r\n\r\n   logOutUser: ()=>{\r\n      return (dispatch, getState) => {\r\n         dispatch({type: 'LOGOUT_USER'})\r\n      }\r\n   },\r\n   \r\n   forcedLoginByLS: (usuarioLS)=>{\r\n      return async(dispatch, getState)=>{\r\n         try {\r\n            const response = await axios.get('https://mytinerary-lorenzo.herokuapp.com/api/user/loginLS', {\r\n               headers:{\r\n                  'Authorization': 'Bearer '+usuarioLS.token\r\n               }\r\n            })\r\n            dispatch({type: 'LOG_USER', payload: {\r\n               ...response.data.response,\r\n               token: usuarioLS.token\r\n            }})\r\n         } catch(err){\r\n            console.log(err)\r\n            // if(err.response.status === 401){\r\n            //    alert('Invalid token -.-')\r\n            // }\r\n         }\r\n      }\r\n   }\r\n}\r\n\r\nexport default authActions","import {NavLink} from 'react-router-dom'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport {Dropdown, DropdownItem, DropdownMenu, DropdownToggle} from 'reactstrap'\r\nimport {useState} from 'react'\r\nimport { connect } from 'react-redux'\r\nimport authActions from '../redux/action/authActions'\r\n\r\nfunction Header (props){\r\n   const userImage = props.userLogged ? props.userLogged.image : '/img/black-user-icon.png'\r\n\r\n   const [dropdown, setDropdown] = useState(false) \r\n   const abrirCerrarDropdown = ()=>{\r\n      setDropdown(!dropdown)\r\n   }\r\n   return(\r\n      <>\r\n         <header className=\"header\">\r\n            <div className=\"homeAndCities-container\">\r\n               <NavLink to=\"/\" >Home</NavLink>\r\n               <div>|</div>\r\n               <NavLink to=\"/cities\" >Cities</NavLink>\r\n            </div>\r\n\r\n            <div className=\"logo-container\">\r\n               <img src=\"/img/logo-finish.png\" alt=\"mi loguito :)\" style={{width: '150px'}}></img>\r\n               <h1 className=\"logo-text\">MyTinerary</h1>\r\n            </div>\r\n\r\n            <div className=\"login-section\">\r\n               {!props.userLogged &&\r\n                  <>\r\n                     <NavLink to=\"/user/signup\"  className=\"link\" style={{color: 'black'}}>Sign Up</NavLink>\r\n                     <p className=\"signUp-divisorLine\">|</p>\r\n                     <NavLink to=\"/user/signin\" className=\"link\" style={{color: 'black'}}>Sign In</NavLink>\r\n                  </>\r\n               }\r\n               {props.userLogged && <NavLink to=\"/\"><p className=\"signOut-button home\" onClick={props.logOutUser} >Sign Out</p></NavLink>}   \r\n               {props.userLogged && <p className=\"userName home \">|</p>}\r\n               {props.userLogged && <p className=\"userName home\"> {props.userLogged.name}</p>}   \r\n\r\n               <div style={{ marginLeft: '20px', width:'100px', height: '100px', borderRadius: '50%', backgroundImage: `url(${userImage})`, backgroundPosition: 'center', backgroundSize: 'cover' }}>\r\n\r\n               </div>\r\n            </div>\r\n\r\n            {/* <div className=\"login-section\">\r\n               <NavLink to=\"/user/signup\"  className=\"link\" style={{color: 'white'}}>Sign Up</NavLink>\r\n               <p style={{color: 'white', marginBottom: '0px'}}>|</p>\r\n               <NavLink to=\"/user/signin\" className=\"link\" style={{color: 'white'}}>Sign In</NavLink>\r\n               <div style={{ marginLeft: '20px'}}>\r\n                  <img src=\"/img/user-icon.png\" className=\"unlogged-icon\" style={{width: '60px'}} alt=\"user unloged logo\"></img>\r\n               </div>\r\n            </div> */}\r\n         </header>\r\n      \r\n         <header className=\"header-responsive\">\r\n            <Dropdown isOpen={dropdown} toggle={abrirCerrarDropdown}>\r\n               <DropdownToggle>\r\n                  <img src=\"/icons/hamburger.png\" alt=\"hamburguer responsive \" width=\"20px\" />\r\n               </DropdownToggle>\r\n\r\n               <DropdownMenu>\r\n                  <DropdownItem>Home</DropdownItem>\r\n                  <DropdownItem>\r\n                     <NavLink to=\"/cities\" >Cities</NavLink>\r\n                  </DropdownItem>\r\n                  <DropdownItem>Sign Up</DropdownItem>\r\n                  <DropdownItem disabled>Log In</DropdownItem>\r\n               </DropdownMenu>\r\n            </Dropdown>\r\n\r\n            <div className=\"logo-container\">\r\n               <img src=\"/img/logo-finish.png\" alt=\"My logo :)\" style={{width: '80px'}}></img>\r\n               <h1 className=\"logo-text\">MyTinerary</h1>\r\n            </div>\r\n\r\n            {/* <div className=\"login-section\"> */}\r\n               <div style={{ marginLeft: '20px'}}>\r\n                  <img src=\"/img/user-icon.png\" alt=\"user unloged icon\" style={{width: '50px'}}></img>\r\n               </div>\r\n            {/* </div> */}\r\n         </header>\r\n      </>\r\n\r\n   )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state)=>{\r\n   return {\r\n      userLogged: state.auth.userLogged\r\n   }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n   logOutUser: authActions.logOutUser\r\n} \r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header)\r\n// export default Header","// import React from 'react'\r\n\r\nfunction Hero (){\r\n   return(\r\n      <div className=\"hero-container\">\r\n            <div className=\"hero-text\">Find your Perfect trip, Designed by insider who knows and love their cities!</div>\r\n      </div>\r\n   )\r\n}\r\nexport default Hero \r\n\r\n","import {NavLink} from 'react-router-dom'\r\nfunction CallToAction (){\r\n   return(\r\n      <>\r\n         <div className=\"callToAction-mainContainer\">\r\n            <div className=\"callToAction-container\">\r\n               <div className=\"ClickHere-button\">\r\n                  <NavLink to=\"/cities\" className=\"ClickHere-button-text\">Click Here! <img src=\"/icons/paper-plane.png\" alt=\"plane icon should be here xD\" className=\"plane-icon\" style={{width:'30px', }} /> </NavLink>\r\n               </div>\r\n               <p className=\"callToAction-text\">...and follow the adventure path</p>\r\n            </div>\r\n         </div>\r\n      </>\r\n   )\r\n}\r\n\r\nexport default CallToAction","import React from 'react'\r\nimport Header from './Header'\r\nimport Hero from './Hero'\r\nimport CallToAction from './CallToAction'\r\n\r\nfunction HomeMain(){\r\n   return(\r\n         <div className=\"home-main\" style={{\r\n            background: `url('/img/static-background.png')`,\r\n            backgroundRepeat: 'no-repeat',\r\n            backgroundPosition: 'bottom',\r\n            backgroundSize: 'cover',\r\n         }}>\r\n            <Header/>\r\n            <Hero/>\r\n            <CallToAction/>\r\n         </div>\r\n   )\r\n}\r\n\r\nexport default HomeMain","const ResponsiveSlide = ({singleSlide})=>{\r\n   return(\r\n      <>\r\n         <div className=\"responsive-slide-container\">\r\n            <div className=\"card\" style={{\r\n               background: `url(/img/${singleSlide.img})`,\r\n               backgroundRepeat: 'no-repeat',\r\n               backgroundPosition: 'center',\r\n               backgroundSize: 'cover'\r\n            }}>\r\n               <div className=\"location-name-container\">\r\n                  <p>{singleSlide.location}</p>\r\n               </div>\r\n            </div>\r\n\r\n         </div>      \r\n      </>\r\n   )   \r\n}\r\n\r\nexport default ResponsiveSlide","\r\nimport React, { Component } from 'react';\r\nimport ResponsiveSlide from './ResponsiveSlide'\r\nimport Carousel from 'react-elastic-carousel';\r\n\r\nclass ResponsiveCarrousel extends Component {\r\n  render (props) {\r\n    const carrouselData = this.props.carrouselData \r\n    \r\n    return (\r\n      <section className='responsive-carrousel'>\r\n        <Carousel itemsToShow={2}>\r\n          {carrouselData.map((array, index) => array.map(object => <ResponsiveSlide singleSlide={object}  /> ))}\r\n        </Carousel>\r\n      </section>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ResponsiveCarrousel","const CarrouselData = [\r\n   [\r\n      {location: 'Buenos Aires', id: 1, img:'buenos-aires.jpg'},\r\n      {location: 'Rio de Janeiro', id: 2, img:'rio-de-janeiro.jpg'},\r\n      {location: 'Estocolmo', id: 3,  img:'estocolmo.jpeg'},\r\n      {location: 'Amsterdam', id: 4,  img:'amsterdam.jpg'},\r\n   ],[\r\n      {location: 'Paris', id: 5, img:  'paris.jpg'},\r\n      {location: 'Rome', id: 6, img:  'rome.jpg'},\r\n      {location: 'Helsinki', id: 7, img:  'helsinki.jpg'},\r\n      {location: 'Berna',id: 8, img:  'berna.jpg'},\r\n   ],[\r\n      {location: 'Madrid', id: 9, img:  'madrid.jpg'},\r\n      {location: 'Oslo', id: 10, img:  'oslo.jpg'},\r\n      {location: 'Copenhague', id: 11, img:  'copenhague.jpg'},\r\n      {location: 'Wellington', id: 12, img:  'wellington.jpg'},\r\n   ],\r\n]\r\n\r\nexport default CarrouselData","import React from 'react';\r\nimport ReactLoading from 'react-loading';\r\n\r\nconst LoadingAnimation = ({ bars, white })=>{\r\n   return(\r\n      <div style={{margin: '0 auto'}}>\r\n         <ReactLoading type={bars} color={white} height={667} width={375} />\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default LoadingAnimation","const CitiesFooter = ()=>{\r\n   return(\r\n      <div className=\"citiesPage-footerContainer\">\r\n         <footer className=\"citiesPage-footer\">\r\n            <div className=\"footerText-left\" >MyTinerary</div>\r\n            <div className=\"footerText-right\" >@_mateo.lorenzo_dev</div>\r\n         </footer>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default CitiesFooter","import React from 'react'\r\nimport Carrousel from '../components/Carrousel'\r\nimport HomeMain from '../components/HomeMain'\r\nimport ResponsiveCarrousel from '../components/ResponsiveCarrousel'\r\nimport CarrouselData from '../components/CarrouselData'\r\nimport axios from 'axios'\r\nimport LoadingAnimation from '../components/LoadingAnimation'\r\nimport CitiesFooter from '../components/CitiesFooter'\r\n\r\nclass Home extends React.Component {\r\n\r\n   state = {\r\n      infoOfCities: [],\r\n      loading: true\r\n   }\r\n\r\n   componentDidMount(){\r\n      axios.get('https://mytinerary-lorenzo.herokuapp.com/api/allCities')\r\n      .then(response => this.setState({infoOfCities: response.data.respuesta, loading: false}))\r\n   }\r\n\r\n   render(){\r\n      if(this.state.loading){\r\n         <LoadingAnimation/>\r\n      }\r\n      return(\r\n         <div>\r\n            <HomeMain/>\r\n            <Carrousel carrouselData={CarrouselData}/>\r\n            <ResponsiveCarrousel carrouselData={CarrouselData} />\r\n            <CitiesFooter/>\r\n            {/* <Footer/> */}\r\n         </div>\r\n      )\r\n   }\r\n}\r\n\r\nexport default Home","import { Link } from 'react-router-dom'\r\n\r\nconst CityCard = ({location})=>{\r\n   return (\r\n      <Link style={{textDecoration: 'none', margin: '15px 15px'}} to={`/itineraries/${location._id}`}>\r\n         <div className=\"cityCard-container\" style={{backgroundImage: `url(${location.img})`}}>\r\n            <div className=\"cityName-container\">\r\n               <p className=\"cityCard-name\">{location.cityName}</p>\r\n            </div>\r\n         </div>\r\n      </Link>          \r\n   )  \r\n}\r\nexport default CityCard\r\n\r\n\r\n\r\n\r\n","import {NavLink} from 'react-router-dom'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport {Dropdown, DropdownItem, DropdownMenu, DropdownToggle} from 'reactstrap'\r\nimport {useState} from 'react'\r\nimport { connect } from 'react-redux'\r\nimport authActions from '../redux/action/authActions'\r\n\r\nconst CitiesHeader = (props)=>{\r\n   const [dropdown, setDropdown] = useState(false) \r\n   const abrirCerrarDropdown = ()=>{\r\n      setDropdown(!dropdown)\r\n   }\r\n\r\n   const userImage = props.userLogged ? props.userLogged.image : '/img/black-user-icon.png'\r\n   // const userImage = ''\r\n   return (\r\n      <>\r\n         <header className=\"cities-header\">\r\n            <div className=\"homeAndCities-container\">\r\n               <NavLink to=\"/\" style={{color: 'white'}}>Home</NavLink>\r\n               <div style={{color: 'white'}}>|</div>\r\n               <NavLink to=\"/cities\" style={{color: 'white'}}>Cities</NavLink>\r\n            </div>\r\n\r\n            <div className=\"logo-container\">\r\n               <img src=\"/img/logo-finish.png\" alt=\"MyTinerary Logo\" style={{width: '150px'}}></img>\r\n               <h1 className=\"logo-text\" style={{color: 'black'}} >MyTinerary</h1>\r\n            </div>\r\n\r\n            <div className=\"login-section\">\r\n               {!props.userLogged &&\r\n                  <>\r\n                     <NavLink to=\"/user/signup\"  className=\"link\" style={{color: 'black'}}>Sign Up</NavLink>\r\n                     <p style={{color: 'black', marginBottom: '0px'}}>|</p>\r\n                     <NavLink to=\"/user/signin\" className=\"link\" style={{color: 'black'}}>Sign In</NavLink>\r\n                  </>\r\n               }\r\n               {props.userLogged && <NavLink to=\"/\"><p className=\"signOut-button\" onClick={props.logOutUser} >Sign Out</p></NavLink>}   \r\n               {props.userLogged && <p className=\"userName\">|</p>}\r\n               {props.userLogged && <p className=\"userName\"> {props.userLogged.name}</p>}\r\n\r\n               <div style={{ marginLeft: '20px', width:'100px', height: '100px', borderRadius: '50%', backgroundImage: `url(${userImage})`, backgroundPosition: 'center', backgroundSize: 'cover' }}>\r\n\r\n               </div>\r\n            </div>\r\n         </header> \r\n\r\n\r\n         <header className=\"cities-header-responsive\">\r\n            <Dropdown isOpen={dropdown} toggle={abrirCerrarDropdown}>\r\n            <DropdownToggle>\r\n                  <img src=\"/icons/hamburger.png\" alt=\"hamburguer\" width=\"20px\" />\r\n               </DropdownToggle>\r\n\r\n               <DropdownMenu>\r\n               <DropdownItem>\r\n                     <NavLink to=\"/\" >Home</NavLink>\r\n                  </DropdownItem>\r\n                  <DropdownItem>\r\n                     <NavLink to=\"/cities\" >Cities</NavLink>\r\n                  </DropdownItem>\r\n                  <DropdownItem>Sign Up</DropdownItem>\r\n                  <DropdownItem disabled>Log In</DropdownItem>\r\n               </DropdownMenu>\r\n            </Dropdown>\r\n\r\n            <div className=\"logo-container\">\r\n               <img src=\"/img/logo-finish.png\" alt=\"mi loguito :)\" style={{width: '150px'}}></img>\r\n               <h1 className=\"logo-text\" style={{color: 'black'}} >MyTinerary</h1>\r\n            </div>\r\n\r\n            <div style={{ marginLeft: '20px'}}>\r\n                  <img src=\"/img/black-user-icon.png\" style={{width: '60px', color: 'black'}} className=\"unlogged-icon\" alt=\"user unloged logo\"></img>\r\n            </div>\r\n         </header>\r\n      </>\r\n   )\r\n}\r\n\r\nconst mapStateToProps = (state)=>{\r\n   return {\r\n      userLogged: state.auth.userLogged\r\n   }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n   logOutUser: authActions.logOutUser\r\n} \r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CitiesHeader)","import axios from 'axios'\r\n\r\n// como mi action no puede fetchear, pero necesito hacerlo, voy a convertir esto en una actionCreator\r\nconst citiesActions = {\r\n   uploadCities: ()=>{\r\n      return (dispatch, getState)=>{\r\n         fetch('https://mytinerary-lorenzo.herokuapp.com/api/cities')\r\n         .then(response => response.json())\r\n         .then(data => dispatch({type: 'CARGAR_CITIES', payload: data.respuesta}))\r\n         .catch(error => console.log(error))\r\n      }\r\n   },\r\n\r\n   citiesFilter: (elementoACapturar)=>{\r\n      return(dispatch, getState) =>{\r\n         dispatch({\r\n            type: 'FILTER_FUNCTION',\r\n            payload: elementoACapturar.trim()\r\n         })  \r\n      }\r\n   },\r\n\r\n   callSingleCity: (id)=>{\r\n      return async(dispatch, getState)=>{\r\n         const response = await axios.get('https://mytinerary-lorenzo.herokuapp.com/api/city/'+ id)\r\n         // console.log(response.data.respuesta)\r\n         return response.data.respuesta\r\n         // dispatch({type: 'GET_SINGLE_CITY', payload: response })\r\n      }\r\n   }\r\n\r\n\r\n}\r\n\r\nexport default citiesActions ","import CityCard from '../components/CityCard'\r\nimport React from 'react'\r\nimport CitiesHeader from '../components/CitiesHeader'\r\nimport CitiesFooter from '../components/CitiesFooter'\r\nimport citiesActions from '../redux/action/citiesActions'\r\nimport {connect} from 'react-redux'\r\nimport LoadingAnimation from '../components/LoadingAnimation'\r\n\r\nclass Cities extends React.Component{\r\n\r\n   componentDidMount(){\r\n      this.props.uploadCities()\r\n      // this.setState({loading: false})\r\n   }\r\n\r\n\r\n   render(){\r\n      return( \r\n         <div style={{display: 'flex', flexDirection: 'column',}}>               \r\n            <CitiesHeader/>\r\n            \r\n            {/* input */}\r\n            <div className=\"cities-page-tittle-container\">\r\n               <h1 className=\"citiesPage-tittle\">Check out All these options!</h1>   \r\n               <input onChange={(e) => this.props.citiesFilter(e.target.value)} placeholder=\"Search a City!\" className=\"main-input\"  type=\"text\" />\r\n            </div>\r\n\r\n            {/* loading animation */}\r\n            {this.props.citiesList.length === 0 \r\n               && <LoadingAnimation/>}\r\n\r\n            {/* show cities or noMatch poster */}\r\n            <div style={{display: 'flex', flexWrap: 'wrap', minHeight: '45vh', justifyContent: 'center'}}>\r\n               \r\n               {this.props.ciudadesFiltradas.length > 0\r\n                  ?  this.props.ciudadesFiltradas.map((city) => {\r\n                        return <CityCard location={city} key={city._id} />})    \r\n                  :  <div className=\"no-match-poster\" style={{height: '40vh', margin: '10vh auto 0vh auto', borderRadius: '10px', width: '80%',     background: `url(/img/fondo-nomatch.jpg)`, backgroundPosition: 'center', backgroundSize: 'cover', display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center'}}> \r\n                     <p className=\"no-match-text1\">Wow! How did you know? That city is coming very soon!</p>\r\n                     <p className=\"no-match-text2\">While, you can try searching any other..</p>\r\n               </div>}\r\n            </div>\r\n\r\n            <CitiesFooter/>  \r\n         </div>\r\n      )\r\n   }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n   return {\r\n      citiesList: state.cities.allCities,   //citiesList es el nombre con el que yo voy a guardar el dato        \r\n      ciudadesFiltradas: state.cities.citiesFilter\r\n   }\r\n}\r\n\r\nconst mapDispatchToProps = { //el mapDispatch despacha acciones y dsps las ubica por medio de las props\r\n   uploadCities: citiesActions.uploadCities,\r\n   citiesFilter: citiesActions.citiesFilter\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Cities)","import CitiesHeader from \"../components/CitiesHeader\"\r\nimport {FaArrowAltCircleDown} from 'react-icons/fa'\r\n\r\nconst ItineraryTittle = ({selectedCity})=>{\r\n\r\n   return(\r\n      <>\r\n         <CitiesHeader/>\r\n\r\n         <div className=\"itinerary-tittle-container\" style={{backgroundImage: `url(${selectedCity.img})`, backgroundPosition: 'center', backgroundSize: 'cover'}}>\r\n            <div className=\"itinerary-tittle-text-container\">\r\n               <p className=\"welcome-to-itinerary\">Welcome to {selectedCity.cityName}, {selectedCity.country}! </p>\r\n            </div>\r\n         </div>\r\n\r\n         <div className=\"takeALook-container\">\r\n            <FaArrowAltCircleDown className=\"down-arrow\"/>\r\n            <h1 className=\"takeALook\">Take a look at all this Itineraries!</h1>\r\n         </div>\r\n      </>\r\n      ) \r\n}\r\n\r\nexport default ItineraryTittle","import axios from 'axios'\r\n\r\nconst itinerariesActions = {\r\n   callSingleCityItinearies: (id)=>{\r\n      return (dispatch, getState)=>{\r\n         fetch('https://mytinerary-lorenzo.herokuapp.com/api/itineraries/' + id)\r\n         .then(response => response.json())\r\n         .then(data => {\r\n            dispatch({type: 'CALL_SELECTED_CITY_ITINERARIES', payload: data.respuesta})\r\n         })\r\n         .catch(error => console.log(error))\r\n      }\r\n   },\r\n\r\n   likeItinerary: (IDs) => {\r\n      return async(dispatch, getState) => {\r\n         const response = await axios.post('https://mytinerary-lorenzo.herokuapp.com/api/likeItinerary', IDs)\r\n         return response\r\n      }\r\n   },\r\n\r\n   sendComment: (commentInfo)=>{\r\n      return async(dispatch, getState)=>{\r\n         const response = await axios.post('https://mytinerary-lorenzo.herokuapp.com/api/itinerary/comments', commentInfo)\r\n         return response\r\n      }\r\n   },\r\n\r\n   deleteComment: (IDs)=> {\r\n      return async(dispatch, getState)=>{\r\n         const response = await axios.delete('https://mytinerary-lorenzo.herokuapp.com/api/itinerary/comments', {data: IDs}) \r\n         return response.data.response\r\n      }\r\n   },\r\n\r\n   editComment: (itineraryId, commentInfo)=> {\r\n      return async(dispatch, getState)=>{\r\n         const response = await axios.put('https://mytinerary-lorenzo.herokuapp.com/api/itinerary/comments/' + itineraryId, commentInfo )\r\n         return response.data.response\r\n      }\r\n   }\r\n\r\n}\r\n\r\nexport default itinerariesActions ","import axios from 'axios'\r\n\r\nconst activitiesActions = {\r\n   getItineraryActivities: (id) => {\r\n      return async(dispatch, getState) => {\r\n         const response = await axios.get('https://mytinerary-lorenzo.herokuapp.com/api/activities/' + id)\r\n         return response.data.response\r\n      }\r\n   }\r\n}\r\n\r\nexport default activitiesActions ","import { Collapse,  Card} from 'reactstrap';\r\nimport {useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {faPaperPlane} from '@fortawesome/free-solid-svg-icons'\r\nimport { FiHeart } from \"react-icons/fi\"\r\nimport {FaHeart} from \"react-icons/fa\"\r\nimport {FaTrashAlt} from \"react-icons/fa\"\r\nimport {FaRegEdit} from \"react-icons/fa\"\r\nimport {IoSend} from 'react-icons/io5'\r\nimport activitiesActions from '../redux/action/activitiesActions'\r\nimport itinerariesActions from '../redux/action/itinerariesActions';\r\nimport {toast} from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport Swal from 'sweetalert2'\r\n\r\n\r\ntoast.configure() // para la tostada de notificaciones\r\n\r\nconst ItineraryCard = (props)=>{\r\n   const {itineraryData, userLogged} = props\r\n\r\n   const [totalLikes, setTotalLikes] = useState(itineraryData.likes.length)\r\n   const [liked, setLiked] = useState(false)\r\n   const [itineraryActivities, setItineraryActivities] = useState([])\r\n   const [isOpen, setIsOpen] = useState(false);\r\n   const [marginBottom, setMarginBottom] = useState(false)\r\n   const [allComments, setAllComments] = useState([])\r\n   const [commentContent, setCommentContent] = useState('')\r\n   const [isEditingComment, setIsEditingComment] = useState(false)\r\n   const [editedComment, setEditedComment] = useState('')\r\n\r\n   useEffect(()=>{   \r\n      // Verifico si el usuario ya likió \r\n      if(userLogged){\r\n         const itineraryLiked = itineraryData.likes.indexOf(userLogged.userId)\r\n         setLiked(itineraryLiked !== -1 && true)\r\n      }\r\n   }, [])   \r\n\r\n   const viewMoreFunction = async()=>{\r\n      setIsOpen(!isOpen)\r\n      const response = await props.getItineraryActivities(itineraryData._id)\r\n      await setItineraryActivities(response)\r\n      setAllComments(itineraryData.comments)\r\n   }\r\n   \r\n   const likeItinerary = async()=>{  \r\n      setLiked(!liked)      \r\n      setTotalLikes(!liked ? totalLikes + 1 : totalLikes - 1)\r\n      const response = await props.likeItinerary({userId: userLogged.userId, itineraryId: itineraryData._id})\r\n   }\r\n\r\n   const sendComment = async()=>{\r\n      if(commentContent !== ''){\r\n         setCommentContent('') // para resetear el input\r\n         const response = await props.sendComment({ userId: userLogged.userId, comment: commentContent, itineraryId: itineraryData._id }) \r\n         await setAllComments(response.data.response)\r\n      }\r\n   }\r\n    \r\n   const deleteSingleComment_ = async(IDs)=>{\r\n      const response = await props.deleteComment(IDs)\r\n      setAllComments(response)\r\n   }\r\n   \r\n\r\n   const deleteSingleComment = async(IDs)=>{\r\n      Swal.fire({\r\n         title: 'Are you sure?',\r\n         text: \"You are going to delete your comment!\",\r\n         icon: 'warning',\r\n         showCancelButton: true,\r\n         confirmButtonColor: '#3085d6',\r\n         cancelButtonColor: '#d33',\r\n         confirmButtonText: 'Yes, delete it!'\r\n      }).then((result) => {\r\n          if (result.isConfirmed) {\r\n            deleteSingleComment_(IDs)\r\n            Swal.fire(\r\n                'Deleted!',\r\n                'Your comment has been deleted',\r\n                'success'\r\n                )\r\n            }\r\n      })\r\n   }\r\n      \r\n\r\n   const startEditingComment = (value)=>{\r\n      setIsEditingComment(!isEditingComment)\r\n      setEditedComment(value)\r\n   }\r\n\r\n   const sendEditedComment = async(itineraryId, commentInfo)=>{\r\n      setIsEditingComment(!isEditingComment)\r\n      const response = await props.editComment(itineraryId, commentInfo)\r\n      setAllComments(response)\r\n   }\r\n\r\n   const notify = (error)=>{\r\n      toast.error(`Must be logged to ${error}!`)\r\n   }\r\n\r\n   return(\r\n      <div className=\"itineraryCard-container\">\r\n         <div className=\"data-container\">\r\n            <h1 className=\"itinerary-tittle\">{itineraryData.tittle}</h1>\r\n            <div className=\"author-img\" style={{backgroundImage: `url(${itineraryData.authorImg})`, backgroundPosition: 'center', backgroundSize: 'cover'}}></div>\r\n            <p className=\"author-name\">{itineraryData.authorName}</p>\r\n            \r\n            <div className=\"itinerary-data-container\">\r\n               <div className=\"price-container\">\r\n                  <p style={{margin:\"0px 0px 0px 0px\", fontSize: \"20px\"}}>Price:</p>\r\n                  {new Array(itineraryData.price).fill(0).map(element => <div key={element._id}> <img src=\"/icons/dolar.png\" alt=\"dollar\" width=\"35px\"/> </div>)}\r\n               </div>\r\n               \r\n               <div className=\"duration-container\">\r\n                  <p style={{margin:\"0px 0px 0px 30px\"}}>Duration:</p>\r\n                  {new Array(itineraryData.duration).fill(0).map(element => <div key={element._id}> <img src=\"/icons/clock.png\" alt=\"clock\" width=\"35px\" /> </div>)}\r\n               </div>\r\n\r\n               <div className=\"likes-container\" style={{display: 'flex', flexDirection: 'column'}}>\r\n                  <div style={{display: 'flex', alignItems: 'center'}}>\r\n                     <div className=\"heart-icon-container\" onClick={userLogged ? likeItinerary : () =>notify('Like')}>                  \r\n                        <FiHeart className={ liked ? \"displayNone\" : \"heart-icon-disliked\"} />\r\n                        <FaHeart className={ liked ? \"heart-icon\" : \"displayNone\"} />\r\n                     </div>\r\n                     <p style={{margin:\"0px 10px 0px 10px\", fontSize: \"30px\"}}>{totalLikes}</p>\r\n                  </div>\r\n               </div>\r\n            </div>\r\n\r\n            <div className=\"hashtags-container\">\r\n               {itineraryData.hashtags.map(element => <p key={element._id} className=\"hashtag\">#{element}</p> )}\r\n            </div>\r\n\r\n              \r\n              \r\n              <div className=\"viewMoreButton-container\">\r\n                  <button onClick={viewMoreFunction} className={ isOpen ? \"displayNone\" : \"viewMore-button\"} >View More</button>\r\n              </div>\r\n               <Collapse isOpen={isOpen}>\r\n                  <Card className=\"collapse-section\" style={{marginBottom: `${marginBottom ? '8vh' : '4vh'}`}}>\r\n                  \r\n                     {/* Activities */}\r\n                     <div className=\"activities-section-container\">\r\n                        <div className=\"actitiesTittle-container\">\r\n                           <h1 className=\"activitiesTittle\">Activities</h1>\r\n                        </div>\r\n                        <div className=\"activities-container\">\r\n                           {itineraryActivities.map( activity => {\r\n                              return (\r\n                                 <div className=\"activity\" style={{backgroundImage: `url(${activity.img})`}} >\r\n                                    <div className=\"activityTittleContainer\">\r\n                                       <h3 className=\"activityTittle\"> {activity.tittle}</h3>   \r\n                                    </div>\r\n                                 </div>\r\n                              )\r\n                           } )}\r\n                        </div>\r\n                     </div>\r\n\r\n                     {/* Comments */}\r\n\r\n                     <div className=\"comments-general-container\">\r\n                        <div className=\"commentsTittle-container\">\r\n                           <h1 className=\"commentsTittle\">Comments</h1>\r\n                        </div>\r\n                        <div className=\"all-comments-container\">\r\n                           {allComments.map((comment)=>{\r\n                              return (\r\n                                 <div className=\"comment\" key={comment._id}>\r\n                                    <div className=\"x-alineator\">\r\n                                       <div>\r\n                                          <div className=\"authorComment-img\" style={{backgroundImage: `url(${comment.userImg})`}} ></div>\r\n                                       </div>\r\n                                       <div className=\"commentContent-container\">\r\n                                          \r\n                                       \r\n                                       \r\n                                          <p className={userLogged ? comment.userId === userLogged.userId \r\n                                             ? !isEditingComment ? \"comment-author\" : \"displayNone\"\r\n                                             : \"comment-author\" \r\n                                          : \"comment-author\"}>\r\n                                             <strong> {comment.userName}</strong>\r\n                                          </p>\r\n                                          \r\n                                          <p className={ userLogged ? comment.userId === userLogged.userId\r\n                                                ? !isEditingComment ? \"comment-content\" : \"displayNone\"\r\n                                                : \"comment-content\"\r\n                                          : \"comment-content\"\r\n                                          } >{comment.comment}</p>\r\n                                          \r\n                                          {userLogged && comment.userId === userLogged.userId && (\r\n                                             <>\r\n                                                <input type=\"text\" value={editedComment} onChange={(e)=> setEditedComment(e.target.value)}   className={isEditingComment ? \"editingInput\": \"displayNone\"} />\r\n                                                <IoSend className={isEditingComment ? \"sendEditedIcon\": \"displayNone\"} \r\n                                                onClick={()=>\r\n                                                 sendEditedComment(itineraryData._id, {commentId: comment._id, newComment: editedComment})} />\r\n                                             </>\r\n                                          )}\r\n                                       </div>\r\n\r\n                                       {userLogged && comment.userId === userLogged.userId && (\r\n                                          <div className=\"modifyCommentIcons-container\">\r\n                                             <FaRegEdit  onClick={()=>startEditingComment(comment.comment)} className={!isEditingComment ? \"edit-icon\" : \"displayNone\"} />\r\n                                             <FaTrashAlt onClick={()=> deleteSingleComment({itineraryId: itineraryData._id, commentId: comment._id})} className={!isEditingComment ? \"delete-icon\" : \"displayNone\"}/>\r\n                                          </div>\r\n                                       )}\r\n                                    </div>\r\n                                 </div>\r\n                              )\r\n                           })}\r\n                        </div>\r\n                        <div className=\"input-container\">\r\n                           <input type=\"text\" value={commentContent} onChange={(e)=> setCommentContent(e.target.value)} className=\"comments-input\" placeholder=\"Leave your comment!\" />\r\n                          \r\n                           <div className=\"paperPlane-icon\" onClick={userLogged ? sendComment : ()=>notify('Comment')}>\r\n                              <FontAwesomeIcon icon={faPaperPlane} />\r\n                           </div>\r\n                        </div>\r\n                     </div>\r\n                  </Card>\r\n\r\n                  <div className=\"viewLess-button-container\">\r\n                     <button onClick={()=> setIsOpen(!isOpen)}  className=\"viewLess-button\">View Less</button>                  \r\n                  </div>\r\n               </Collapse>\r\n         </div>\r\n\r\n      </div>\r\n   )\r\n}\r\n\r\nconst mapStateToProps = (state)=>{\r\n   return {\r\n      userLogged: state.auth.userLogged,\r\n      cities: state.itineraries\r\n   }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n   getItineraryActivities: activitiesActions.getItineraryActivities,\r\n   likeItinerary: itinerariesActions.likeItinerary,\r\n   sendComment: itinerariesActions.sendComment,\r\n   deleteComment: itinerariesActions.deleteComment,\r\n   editComment: itinerariesActions.editComment\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ItineraryCard)\r\n","import ItineraryTittle from '../components/ItineraryTittle'\r\nimport React from 'react'\r\nimport itinerariesActions from '../redux/action/itinerariesActions'\r\nimport citiesActions from '../redux/action/citiesActions'\r\nimport {connect} from 'react-redux'\r\nimport ItineraryCard from '../components/ItineraryCard'\r\nimport CitiesFooter from '../components/CitiesFooter'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nclass Itineraries extends React.Component{\r\n   state = {\r\n      selectedCity: {}\r\n   } \r\n\r\n   async componentDidMount (){\r\n      const receivedId = this.props.match.params.id\r\n\r\n      if(this.props.allCities.length > 0){\r\n         this.setState({selectedCity: this.props.allCities.find(city => city._id === receivedId)})\r\n      } else {\r\n         const response = await this.props.callSingleCity(receivedId)\r\n         this.setState({selectedCity: response})\r\n      } \r\n      \r\n      this.props.callSingleCityItinearies(receivedId)\r\n   }\r\n   \r\n   render(){\r\n      return (\r\n         <>             \r\n            <ItineraryTittle  selectedCity={this.state.selectedCity}/>\r\n            \r\n            {/* Si encontró itinerarios que los muestre */}\r\n            {this.props.selectedCityItineraries.length > 0\r\n               ? this.props.selectedCityItineraries.map(itinerary => <ItineraryCard itineraryData={itinerary} key={itinerary._id} />)\r\n               : <h1 style={{textAlign: 'center', background: 'white', padding: '100px', borderRadius: '50px'}}>We're still working on this city's Itineraries!</h1>}\r\n            \r\n            <div className=\"linkToHome-container\">\r\n               <NavLink className=\"link-to-home\" to=\"/cities\">Back to Cities</NavLink>\r\n            </div>\r\n            <CitiesFooter/>\r\n         </>\r\n      )\r\n   }  \r\n}\r\n\r\nconst mapStateToProps = (state)=>{\r\n   return {\r\n      // loggedUser: state.auth.loggedUser,\r\n      allCities: state.cities.allCities,\r\n      selectedCityItineraries: state.itineraries.selectedCityItineraries\r\n   }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n   callSingleCityItinearies: itinerariesActions.callSingleCityItinearies,\r\n   callSingleCity: citiesActions.callSingleCity\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Itineraries)\r\n\r\n\r\n","import {NavLink} from 'react-router-dom'\r\nimport {useEffect, useState} from 'react'\r\nimport CitiesHeader from './CitiesHeader'\r\nimport authActions from '../redux/action/authActions'\r\nimport { connect } from 'react-redux'\r\nimport { GoogleLogin } from 'react-google-login';\r\n\r\n\r\nconst SignUp = (props)=>{   \r\n   // en info guardo los paises fetcheados\r\n   var [info, setInfo] = useState([])\r\n   var [newUser, setNewUser] = useState({name: '', lastName: '', mail: '', password: '', image: '', country: '' })\r\n   var [errors, setErrors] = useState([])\r\n\r\n   useEffect(()=>{\r\n      fetch('https://restcountries.eu/rest/v2/all')\r\n      .then(res => res.json())\r\n      .then(data => setInfo(data))\r\n   }, [])\r\n\r\n   const saveInfo = (e)=>{\r\n      const element = e.target.name //agarro el campo que está llenando el usuario\r\n      const value = e.target.value  //agarro el valor/lo q está escribiendo el usuario\r\n      setNewUser({\r\n         ...newUser,\r\n         [element]: value //Los [] van porque va a ser una propiedad dinamica\r\n      })\r\n   }\r\n\r\n   const sendData = async (e = null, googleUser = null)=>{\r\n      e && e.preventDefault()\r\n      let user = e ? newUser : googleUser // Si hay e, es porque completó los campos, entonces tomo esos datos, sino tomo el user de google\r\n      const response = await props.registerUser(user)\r\n      if(response){\r\n         setErrors(errors = response.details)\r\n      }\r\n   }\r\n\r\n   const responseGoogle = (response)=> {\r\n      const { givenName, familyName, email, googleId, imageUrl, country = 'Not Given'} = response.profileObj\r\n      sendData(null, {name: givenName, lastName: familyName, mail: email, password: \"a\"+googleId, image: imageUrl, country: country} )\r\n   }\r\n\r\n   return (\r\n      <>\r\n         <CitiesHeader/>\r\n\r\n         <div className=\"signIn-main-container\">\r\n            <div className=\"form-box\">\r\n               <div className=\"form-container\">\r\n               <h1 className=\"register-tittle\">USER SIGN UP</h1>\r\n               <h1 className=\"register-tittle2\">SIGN UP</h1>\r\n               <div className=\"errorMessages-container\">\r\n                  {errors.map(error => {\r\n                     return <p> {error.message} </p>\r\n                  } )} \r\n               </div>\r\n                  <form action=\"\" className=\"form\">\r\n                     <input type=\"text\" onChange={saveInfo} value={newUser.name} name=\"name\" className=\"register-input\" placeholder=\"Name\"/>\r\n                     <input type=\"text\" onChange={saveInfo} value={newUser.lastName} name=\"lastName\" className=\"register-input\" placeholder=\"Last Name\"/>\r\n                     <input type=\"text\" onChange={saveInfo} value={newUser.mail} name=\"mail\" className=\"register-input\" placeholder=\"Mail\"/>\r\n                     <input type=\"password\" onChange={saveInfo} value={newUser.password} name=\"password\" className=\"register-input\" placeholder=\"Password\"/>\r\n                     <input type=\"text\" onChange={saveInfo} value={newUser.image} name=\"image\" className=\"register-input\" placeholder=\"Image (url)\"/>\r\n                     <select className=\"signUp-select\" value={newUser.country} name=\"country\" onChange={saveInfo} >\r\n                        <option >Country</option>  \r\n                        {info.map((element, index) => <option  className=\"country-option\">{element.name}</option>)}\r\n                     </select>\r\n                  </form>\r\n                  <div className=\"register-buttonsContainer\">\r\n                  <GoogleLogin\r\n                     clientId=\"65661377486-3ridgqe1v6hdfj5s067rtfi3jg21nnvh.apps.googleusercontent.com\"\r\n                     buttonText=\"Sign Up with Google\"\r\n                     onSuccess={responseGoogle}\r\n                     onFailure={responseGoogle}\r\n                     cookiePolicy={'single_host_origin'}\r\n                  />\r\n                     <button onClick={sendData} className=\"register-button\">REGISTER</button>\r\n                  </div>\r\n                  <NavLink to=\"/user/signin\" className=\"register-callToAction\">Have an account? Sign In Here!</NavLink>\r\n               </div>\r\n            </div>\r\n         </div>\r\n         <div className=\"citiesPage-footerContainer1\">\r\n            <footer className=\"citiesPage-footer1\">\r\n               <div className=\"footerText-left\" >MyTinerary</div>\r\n               <div className=\"footerText-right\" >@_mateo.lorenzo_dev</div>\r\n            </footer>\r\n         </div>\r\n      </>\r\n      ) \r\n}\r\n\r\nconst mapDispatchToProps = {\r\n   registerUser: authActions.registerUser\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignUp)\r\n// export default SignUp","import {useState} from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {NavLink} from 'react-router-dom'\r\nimport CitiesHeader from './CitiesHeader'\r\nimport authActions from '../redux/action/authActions'\r\nimport { GoogleLogin } from 'react-google-login';\r\n\r\nconst SignIn = (props)=>{\r\n   // var [userId, setUserId] = useState(props.userLogged)\r\n   const [incomingUser, setIncomingUser] = useState({mail: '', password: ''})\r\n\r\n   const saveInfo = (e)=>{\r\n      const element = e.target.name //agarro el campo que está llenando el usuario\r\n      const value = e.target.value //agarro el valor/lo q está escribiendo el usuario\r\n      setIncomingUser({\r\n         ...incomingUser,\r\n         [element]: value\r\n      })\r\n   }\r\n\r\n   const sendData = async(e = null, userGoogle = null)=>{\r\n      e && e.preventDefault()\r\n      let user = e ? incomingUser : userGoogle // Si hay e, es porque completó los campos, entonces tomo esos datos, sino tomo el user de google\r\n      props.logUser(user) //action que hace el fetcheo de tipo post \r\n      // setUserId(userId = props.userLogged)\r\n   }\r\n   \r\n   const responseGoogle = (response)=> {\r\n      if(response.profileObj.email){\r\n         sendData(null, {mail: response.profileObj.email, password: \"a\"+response.profileObj.googleId} )\r\n      } else {\r\n         alert('Looks like something went wrong... please come back later.')\r\n      }\r\n   }\r\n   \r\n   return(\r\n      <>\r\n         <CitiesHeader/>\r\n\r\n         <div className=\"signIn-main-container\">\r\n            <div className=\"form-box\">\r\n               <div className=\"form-container\">\r\n                  <h1 className=\"signIn-tittle\">USER SIGN IN</h1>\r\n                  <form action=\"\" className=\"form\">\r\n                    <input type=\"text\" name=\"mail\" value={incomingUser.mail} onChange={saveInfo} className=\"login-input\" placeholder=\"Mail\"/>\r\n                    <input type=\"password\" name=\"password\" value={incomingUser.password} onChange={saveInfo} className=\"login-input\" placeholder=\"Password\"/>\r\n                  </form>\r\n                  <div className=\"signIn-buttonsContainer\">\r\n                    <GoogleLogin\r\n                        clientId=\"65661377486-3ridgqe1v6hdfj5s067rtfi3jg21nnvh.apps.googleusercontent.com\"\r\n                        buttonText=\"Sign In with Google\"\r\n                        onSuccess={responseGoogle}\r\n                        onFailure={responseGoogle}\r\n                        cookiePolicy={'single_host_origin'}\r\n                     />\r\n                    <button onClick={sendData} className=\"login-button\">SIGN IN</button>\r\n                  </div>\r\n                  <NavLink className=\"signIn-callToAction\" to=\"/user/signup\">Don't registered yet? Sign up Here!</NavLink>\r\n               </div>\r\n            </div>\r\n         </div>\r\n\r\n         {/* Footer */}\r\n         <div className=\"citiesPage-footerContainer1\">\r\n            <footer className=\"citiesPage-footer1\">\r\n               <div className=\"footerText-left\" >MyTinerary</div>\r\n               <div className=\"footerText-right\" >@_mateo.lorenzo_dev</div>\r\n            </footer>\r\n         </div>\r\n      </>\r\n\r\n   ) \r\n}\r\n\r\nconst mapStateToProps = (state)=>{\r\n   return {\r\n      userLogged: state.auth.userLogged\r\n   }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n   logUser: authActions.logUser\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)","import './App.css'\r\nimport Home from './pages/Home'\r\nimport Cities from './pages/Cities'\r\nimport {BrowserRouter, Redirect, Route, Switch} from 'react-router-dom'\r\nimport Itineraries from './pages/Itineraries'\r\nimport SignUp from './components/SignUp'\r\nimport SignIn from './components/SignIn'\r\nimport { connect } from 'react-redux'\r\nimport authActions from './redux/action/authActions'\r\n\r\nfunction App(props) {\r\n  // Para no perder los datos cuando recargo / Login Forzado\r\n  if(!props.userLogged && localStorage.getItem('token')){\r\n    const datosUsuario = JSON.parse(localStorage.getItem('userLogged'))\r\n    const usuarioLS = {\r\n      token: localStorage.getItem('token'),\r\n      ...datosUsuario\r\n    }\r\n    props.forcedLoginByLS(usuarioLS)\r\n    return null // si no le pongo el return null, sigue leyendo para abajo, pero con esto le digo que mientras está procesando no me muestre nada.\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <BrowserRouter>\r\n        <Switch>\r\n          \r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route path=\"/cities\" component={Cities}/> \r\n          <Route exact path=\"/itineraries/:id\" component={Itineraries}/>\r\n          { !props.userLogged && <Route path=\"/user/signup\" component={SignUp}/>}\r\n          { !props.userLogged && <Route path=\"/user/signin\" component={SignIn}/>}\r\n          <Redirect to=\"/\" />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state)=>{\r\n  return {\r\n    userLogged: state.auth.userLogged\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  forcedLoginByLS: authActions.forcedLoginByLS\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","const initialState = {\r\n   allCities: [],\r\n   citiesFilter: []\r\n}\r\n\r\nconst citiesReducer = (state = initialState, action)=>{\r\n   switch (action.type){\r\n      case 'CARGAR_CITIES':\r\n         return {\r\n            ...state, \r\n            allCities: action.payload,\r\n            citiesFilter: action.payload\r\n         }\r\n         break\r\n\r\n      case 'FILTER_FUNCTION':\r\n         const inputValue = action.payload  \r\n         return{\r\n            ...state, \r\n            citiesFilter: state.allCities.filter((city) => {\r\n               return city.cityName.toLowerCase().slice(0, inputValue.length) === inputValue.toLowerCase()\r\n            })  \r\n         }           \r\n         break    \r\n      \r\n         default: \r\n            return state\r\n   }\r\n}\r\n\r\nexport default citiesReducer","const initialState = {\r\n   selectedCityItineraries: [],\r\n}\r\n\r\nconst itinerariesReducer = (state = initialState, action) =>{\r\n   switch (action.type){\r\n      case 'CALL_SELECTED_CITY_ITINERARIES':\r\n         return {\r\n            ...state,\r\n            selectedCityItineraries: action.payload\r\n         }\r\n      break\r\n\r\n      default:\r\n         return state\r\n   }\r\n}\r\n\r\nexport default itinerariesReducer","const initialState = {\r\n   userLogged: null,\r\n}\r\n\r\nconst authReducer = (state = initialState, action)=>{\r\n   switch (action.type){\r\n      case 'LOG_USER':\r\n         if(action.payload){\r\n            localStorage.setItem('userLogged', JSON.stringify({name: action.payload.name, image: action.payload.image, userId: action.payload.userId}))\r\n            localStorage.setItem('token', action.payload.token)\r\n         }\r\n         return {\r\n            ...state, \r\n            userLogged: action.payload\r\n         }\r\n         break\r\n\r\n      case 'LOGOUT_USER':\r\n         // localStorage.removeItem('userLogged')\r\n         localStorage.clear()\r\n         return {\r\n            ...state, \r\n            userLogged: null\r\n         }\r\n         break\r\n      default:\r\n         return state\r\n   }\r\n}\r\n\r\nexport default authReducer","import { combineReducers } from \"redux\";\r\nimport citiesReducer from \"./citiesReducer\";\r\nimport itinerariesReducer from \"./itineraryReducer\";\r\nimport authReducer from \"./authReducer\"\r\n\r\nconst mainReducer = combineReducers({\r\n   cities: citiesReducer,\r\n   itineraries: itinerariesReducer,\r\n   auth: authReducer\r\n})\r\n\r\nexport default mainReducer","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport {applyMiddleware, createStore} from 'redux'\r\nimport {Provider} from 'react-redux'\r\nimport mainReducer from './redux/reducers/mainReducer'\r\nimport thunk from 'redux-thunk';\r\n\r\nconst myTineraryStore = createStore(mainReducer, applyMiddleware(thunk))\r\nReactDOM.render(\r\n  <Provider store={myTineraryStore}>\r\n      <React.StrictMode>\r\n          <App />\r\n      </React.StrictMode>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}